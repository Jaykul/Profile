<?xml version="1.0" encoding="utf-8" ?>
<!-- *******************************************************************
This is Joel "Jaykul" Bennett's coloring format file for PowerShell 5.1
******************************************************************** -->
<Configuration>
  <SelectionSets>
    <SelectionSet>
      <Name>FileSystemTypes</Name>
      <Types>
        <TypeName>System.IO.DirectoryInfo</TypeName>
        <TypeName>System.IO.FileInfo</TypeName>
      </Types>
    </SelectionSet>
  </SelectionSets>
  <!-- ################ CONTROL DEFINITIONS ################ -->
  <Controls>
    <Control>
      <Name>FileSystemTypes-GroupingFormat</Name>
      <CustomControl>
        <CustomEntries>
          <CustomEntry>
            <CustomItem>
              <Frame>
                <LeftIndent>4</LeftIndent>
                <CustomItem>
                  <Text>Directory </Text>
                  <ExpressionBinding>
                    <ScriptBlock>
                      $_.PSParentPath.Replace("Microsoft.PowerShell.Core\FileSystem::","")
                    </ScriptBlock>
                  </ExpressionBinding>
                  <NewLine/>
                </CustomItem>
              </Frame>
            </CustomItem>
          </CustomEntry>
        </CustomEntries>
      </CustomControl>
    </Control>
  </Controls>
  <ViewDefinitions>
    <View>
      <Name>history</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.HistoryInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Width>4</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Duration</Label>
            <Width>11</Width>
            <Alignment>Right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>CommandLine</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Id</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  $ts = $_.EndExecutionTime - $_.StartExecutionTime
                  if($ts.Minutes)
                  {
                    if($ts.Hours)
                    {
                      if($ts.Days)
                      {
                        return "{0:##}d {1:00}h {2:00}m" -f $ts.Days, $ts.Hours, $ts.Minutes
                      }
                      return "{0:##}h {1:00}m {2:00}s" -f $ts.Hours, $ts.Minutes, $ts.Seconds
                    }
                    return "{0:##}m {1:n3}s" -f $ts.Minutes, ($ts.TotalSeconds - ($ts.Minutes * 60))
                  }
                  return "{0:n7}s" -f $ts.TotalSeconds
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  $_.CommandLine.TrimStart() -replace "[\r\n]+", "$([char]0x2026) "
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>colors</Name>
      <ViewSelectedBy>
        <SelectionSetName>FileSystemTypes</SelectionSetName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>PSParentPath</PropertyName>
        <CustomControlName>FileSystemTypes-GroupingFormat</CustomControlName>
      </GroupBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>Mode</Label>
            <Width>7</Width>
            <Alignment>left</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>LastWriteTime</Label>
            <Width>25</Width>
            <Alignment>right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Length</Label>
            <Width>14</Width>
            <Alignment>right</Alignment>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <Wrap/>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>Mode</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  [String]::Format("{0,10}  {1,8}", $_.LastWriteTime.ToString("d"), $_.LastWriteTime.ToString("t"))
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Length</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                  if ($host.UI.SupportsVirtualTerminal) {
                    $o = "$([char]27)[39m$([char]27)[49m"
                    $file = $_.Name + $o

                    if ($PSFileFormats.ContainsKey($_.Extension)) {
                      $PSFileFormats[$_.Extension].Color + $PSFileFormats[$_.Extension].Icon + " " + $file
                    } elseif ($_ -is [System.IO.DirectoryInfo]) {
                      if ($PSFileFormats.ContainsKey("Directory")) {
                        $PSFileFormats["Directory"].Color + $PSFileFormats["Directory"].Icon + " " + $file
                      } else {
                        $o + "  " + $_.Name
                      }
                    } else {
                      $o + "  " + $_.Name
                    }
                  } else {
                    $o + "  " + $_.Name
                  }
                </ScriptBlock>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>colors</Name>
      <ViewSelectedBy>
        <SelectionSetName>FileSystemTypes</SelectionSetName>
      </ViewSelectedBy>
      <GroupBy>
        <PropertyName>PSParentPath</PropertyName>
        <CustomControlName>FileSystemTypes-GroupingFormat</CustomControlName>
      </GroupBy>
      <WideControl>
        <WideEntries>
          <WideEntry>
            <WideItem>
              <PropertyName>Name</PropertyName>
            </WideItem>
          </WideEntry>
          <WideEntry>
            <EntrySelectedBy>
              <TypeName>System.IO.FileInfo</TypeName>
            </EntrySelectedBy>
            <WideItem>
              <ScriptBlock>
                                # ANSI Colors are 30-37 and 90-97
                                if ($host.UI.SupportsVirtualTerminal)
                                {
                                    $f = $_
                                    $o = "$([char]27)[39m$([char]27)[49m"
                                    $e = [char]27 + "[38;5;"
                                    switch -regex ($_.Extension.TrimStart('.'))
                                    {
                                        '^exe$' # Applications
                                        {
                                            "${e}90m $([char]0xfb13) $($f.Name)$o"
                                            break
                                        }
                                        '^js$' # javascript (Scripts Color)
                                        {
                                            "${e}161m $([char]0xf81d) $($f.Name)$o"
                                            break
                                        }
                                        '^(cmd|bat)$' # DOS (Scripts Colo
                                        {
                                            "${e}161m $([char]0xe629) $($f.Name)$o"
                                            break
                                        }
                                        '^(ps1|sh|py|rb|pl)$' # More Scripts
                                        {
                                            "${e}161m $([char]0xf977) $($f.Name)$o"
                                            break
                                        }
                                        '^(psm1|dll)$' # Modules, Assemblies
                                        {
                                            "${e}229m$($f.Name)$o"
                                        }
                                        '^(csv|xml|ps1xml|clixml|psd1|json)$' # Importable data files
                                        {
                                            "${e}39m$($f.Name)$o"
                                        }
                                        '^(txt|log)$' # readable Text Files
                                        {
                                            "${e}33m$($f.Name)$o"
                                        }
                                        '^(conf|config|reg)$' # Config files
                                        {
                                            "${e}112m$($f.Name)$o"
                                        }
                                        '^(docx?|xlsx?|pdf|html?|chm)$' # Documents
                                        {
                                            "${e}41m$($f.Name)$o"
                                        }
                                        default
                                        {
                                            $f.Name
                                        }
                                    }
                                    return
                                }
                                $_.Name
              </ScriptBlock>
            </WideItem>
          </WideEntry>
        </WideEntries>
      </WideControl>
    </View>
    <View>
      <Name>System.RuntimeType</Name>
      <ViewSelectedBy>
        <TypeName>System.RuntimeType</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>IsPublic</Label>
            <Width>8</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>IsSerial</Label>
            <Width>8</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Width>40</Width>
          </TableColumnHeader>
          <TableColumnHeader />
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>IsPublic</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>IsSerializable</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Name</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>FullName</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>CommandInfo</Name>
      <ViewSelectedBy>
        <TypeName>System.Management.Automation.CmdletInfo</TypeName>
        <TypeName>System.Management.Automation.FunctionInfo</TypeName>
        <TypeName>System.Management.Automation.FilterInfo</TypeName>
        <TypeName>System.Management.Automation.AliasInfo</TypeName>
        <TypeName>System.Management.Automation.ApplicationInfo</TypeName>
        <TypeName>System.Management.Automation.ScriptInfo</TypeName>
        <TypeName>System.Management.Automation.ExternalScriptInfo</TypeName>
      </ViewSelectedBy>
      <TableControl>
        <TableHeaders>
          <TableColumnHeader>
            <Label>CommandType</Label>
            <Width>15</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Name</Label>
            <Width>50</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Version</Label>
            <Width>10</Width>
          </TableColumnHeader>
          <TableColumnHeader>
            <Label>Source</Label>
          </TableColumnHeader>
        </TableHeaders>
        <TableRowEntries>
          <TableRowEntry>
            <TableColumnItems>
              <TableColumnItem>
                <PropertyName>CommandType</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <ScriptBlock>
                                if ($_.CommandType -eq "Alias") {
                                  if ($_.ResolvedCommand -ne $null) {
                                    $_.Name + " -> " + $_.ResolvedCommand.Name
                                  } else {
                                    $_.Name + " -> " + $_.Definition
                                  }
                                } else {
                                  $_.Name
                                }
                </ScriptBlock>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Version</PropertyName>
              </TableColumnItem>
              <TableColumnItem>
                <PropertyName>Source</PropertyName>
              </TableColumnItem>
            </TableColumnItems>
          </TableRowEntry>
        </TableRowEntries>
      </TableControl>
    </View>
    <View>
      <Name>MatchInfo</Name>
      <ViewSelectedBy>
        <TypeName>Microsoft.PowerShell.Commands.MatchInfo</TypeName>
      </ViewSelectedBy>
      <CustomControl>
        <CustomEntries>
          <CustomEntry>
            <CustomItem>
              <ExpressionBinding>
                <ScriptBlock>
                                    [string]$curDir = $pwd.Path
                                    if (!$host.UI.SupportsVirtualTerminal)
                                    {
                                        $_.ToString($curDir)
                                        return
                                    }

                                    function FormatLine($matchInfo, [string]$line, [int]$lineNumber, [string]$displayPath, [string]$prefix, [switch]$isMatchLine)
                                    {
                                        if ($isMatchLine)
                                        {
                                            $esc = [char]0x1b
                                            for($i = $matchInfo.Matches.Count -1; $i -ge 0; $i-=1){
                                                $match = $matchInfo.Matches[$i]
                                                $Line = $Line.Insert($match.Index + $match.Length, "$esc[0m").Insert($match.Index, (Get-PSReadLineOption).EmphasisColor)
                                            }
                                        }

                                        if ($matchInfo.Path -ne 'InputStream')
                                        {
                                            "{0}{1}{2}$esc[0m:{3}{4}$esc[0m:{5}" -f (Get-PSReadLineOption).DefaultTokenColor, $prefix, $displayPath, (Get-PSReadLineOption).NumberColor, $lineNumber, $line
                                        }
                                        else
                                        {
                                            "{0}{1}" -f $prefix, $line
                                        }
                                    }

                                    $displayPath = if ('' -eq $curDir) { $_.Path } else { $_.RelativePath($curDir) }
                                    if ($null -eq $_.Context)
                                    {
                                        FormatLine -MatchInfo $_ -Line $_.Line -LineNumber $_.LineNumber -DisplayPath $displayPath -Prefix "" -IsMatchLine
                                    }
                                    else
                                    {
                                        $lines = . {
                                        $displayLineNumber = $_.LineNumber - $_.Context.DisplayPreContext.Length;
                                        foreach ($contextLine in $_.Context.DisplayPreContext)
                                        {
                                            FormatLine -MatchInfo $_ -Line $contextLine -LineNumber $displayLineNumber -DisplayPath $displayPath -Prefix "  "
                                            $displayLineNumber += 1
                                        }

                                        FormatLine -MatchInfo $_ -Line $_.Line -LineNumber $displayLineNumber -DisplayPath $displayPath -Prefix "> " -IsMatchLine
                                        $displayLineNumber += 1

                                        foreach ($contextLine in $_.Context.DisplayPostContext)
                                        {
                                            FormatLine -MatchInfo $_ -Line $contextLine -LineNumber $displayLineNumber -DisplayPath $displayPath -Prefix "  "
                                            $displayLineNumber += 1
                                        }
                                        }

                                        $lines -join ([Environment]::Newline)
                                    }
                </ScriptBlock>
              </ExpressionBinding>
            </CustomItem>
          </CustomEntry>
        </CustomEntries>
      </CustomControl>
    </View>
    <!-- <View>
      <Name>ColorScheme</Name>
      <ViewSelectedBy>
        <TypeName>ColorTool.ColorScheme</TypeName>
      </ViewSelectedBy>
      <CustomControl>
        <CustomEntries>
          <CustomEntry>
            <CustomItem>
              <ExpressionBinding>
                <ScriptBlock>
                                    $ColorTable = $_.ColorTable
                                    $e = [char]27
                                    $ansi = 30
                                    $bold = $false
                                    -join $("`nColorScheme: " + $_.name + "`n"
                                        # Simulate using 40..47 and 30..37 using the RGB color values from the ColorScheme
                                        "             Black   Red     Green   Yellow  Blue    Magenta Cyan    White`n"
                                        "       49m     40m     41m     42m     43m     44m     45m     46m     47m`n"
                                        "  39m"
                                        foreach($fg in @($null) + $ColorTable[0, 8, 4, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15]) {
                                            if($fg -ne $null) {
                                                "$(if($bold){"1;"}else{"  "})$($ansi)m"
                                                $ansi += $bold
                                                $bold = !$bold
                                            }
                                            foreach($bg in @($null) + $ColorTable[0, 4, 2, 6, 1, 5, 3, 7]) {
                                                $(if($bg -ne $null) { "$e[48;2;$($bg -band 0xff);$($bg -shr 8 -band 0xFF);$($bg -shr 16 -band 0xFF)m" })
                                                $(if($fg -ne $null) { "$e[38;2;$($fg -band 0xff);$($fg -shr 8 -band 0xFF);$($fg -shr 16 -band 0xFF)m" })
                                                "  gYw  $([char]27)[0m "
                                            }
                                            "`n"
                                        }
                                    )
                </ScriptBlock>
              </ExpressionBinding>
            </CustomItem>
          </CustomEntry>
        </CustomEntries>
      </CustomControl>
    </View>
    <View>
      <Name>ConsolePalette</Name>
      <ViewSelectedBy>
        <TypeName>ColorMine.Palettes.Palette`1[PoshCode.Pansies.RgbColor]</TypeName>
        <TypeName>System.Collections.Generic.IList`1[PoshCode.Pansies.RgbColor]</TypeName>
        <TypeName>PoshCode.Pansies.RgbColor</TypeName>
      </ViewSelectedBy>
      <CustomControl>
        <CustomEntries>
          <CustomEntry>
            <CustomItem>
              <ExpressionBinding>
                <ScriptBlock>
                                    $ColorTable = $_
                                    $e = [char]27
                                    $ansi = 30
                                    $bold = $false
                                    -join $("`nColorScheme: " + $_.name + "`n"
                                        # Simulate using 40..47 and 30..37 using the RGB color values from the ColorScheme
                                        "             Black   Red     Green   Yellow  Blue    Magenta Cyan    White`n"
                                        "       49m     40m     41m     42m     43m     44m     45m     46m     47m`n"
                                        "  39m"
                                        foreach($fg in @($null) + $ColorTable[0, 8, 4, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15]) {
                                            if($fg -ne $null) {
                                                "$(if($bold){"1;"}else{"  "})$($ansi)m"
                                                $ansi += $bold
                                                $bold = !$bold
                                            }
                                            foreach($bg in @($null) + $ColorTable[0, 4, 2, 6, 1, 5, 3, 7]) {
                                                $(if($bg -ne $null) { $bg.ToVtEscapeSequence($true) })
                                                $(if($fg -ne $null) { $fg.ToVtEscapeSequence() })
                                                "  gYw  $([char]27)[0m "
                                            }
                                            "`n"
                                        }
                                    )
                </ScriptBlock>
              </ExpressionBinding>
            </CustomItem>
          </CustomEntry>
        </CustomEntries>
      </CustomControl>
    </View> -->
  </ViewDefinitions>
</Configuration>

<!-- SIG # Begin signature block -->
<!-- MIIXzgYJKoZIhvcNAQcCoIIXvzCCF7sCAQExCzAJBgUrDgMCGgUAMGkGCisGAQQB -->
<!-- gjcCAQSgWzBZMDQGCisGAQQBgjcCAR4wJgIDAQAABBAfzDtgWUsITrck0sYpfvNR -->
<!-- AgEAAgEAAgEAAgEAAgEAMCEwCQYFKw4DAhoFAAQUjXNCkST3RG25qpUMtbfJ15br -->
<!-- D0agghMBMIID7jCCA1egAwIBAgIQfpPr+3zGTlnqS5p31Ab8OzANBgkqhkiG9w0B -->
<!-- AQUFADCBizELMAkGA1UEBhMCWkExFTATBgNVBAgTDFdlc3Rlcm4gQ2FwZTEUMBIG -->
<!-- A1UEBxMLRHVyYmFudmlsbGUxDzANBgNVBAoTBlRoYXd0ZTEdMBsGA1UECxMUVGhh -->
<!-- d3RlIENlcnRpZmljYXRpb24xHzAdBgNVBAMTFlRoYXd0ZSBUaW1lc3RhbXBpbmcg -->
<!-- Q0EwHhcNMTIxMjIxMDAwMDAwWhcNMjAxMjMwMjM1OTU5WjBeMQswCQYDVQQGEwJV -->
<!-- UzEdMBsGA1UEChMUU3ltYW50ZWMgQ29ycG9yYXRpb24xMDAuBgNVBAMTJ1N5bWFu -->
<!-- dGVjIFRpbWUgU3RhbXBpbmcgU2VydmljZXMgQ0EgLSBHMjCCASIwDQYJKoZIhvcN -->
<!-- AQEBBQADggEPADCCAQoCggEBALGss0lUS5ccEgrYJXmRIlcqb9y4JsRDc2vCvy5Q -->
<!-- WvsUwnaOQwElQ7Sh4kX06Ld7w3TMIte0lAAC903tv7S3RCRrzV9FO9FEzkMScxeC -->
<!-- i2m0K8uZHqxyGyZNcR+xMd37UWECU6aq9UksBXhFpS+JzueZ5/6M4lc/PcaS3Er4 -->
<!-- ezPkeQr78HWIQZz/xQNRmarXbJ+TaYdlKYOFwmAUxMjJOxTawIHwHw103pIiq8r3 -->
<!-- +3R8J+b3Sht/p8OeLa6K6qbmqicWfWH3mHERvOJQoUvlXfrlDqcsn6plINPYlujI -->
<!-- fKVOSET/GeJEB5IL12iEgF1qeGRFzWBGflTBE3zFefHJwXECAwEAAaOB+jCB9zAd -->
<!-- BgNVHQ4EFgQUX5r1blzMzHSa1N197z/b7EyALt0wMgYIKwYBBQUHAQEEJjAkMCIG -->
<!-- CCsGAQUFBzABhhZodHRwOi8vb2NzcC50aGF3dGUuY29tMBIGA1UdEwEB/wQIMAYB -->
<!-- Af8CAQAwPwYDVR0fBDgwNjA0oDKgMIYuaHR0cDovL2NybC50aGF3dGUuY29tL1Ro -->
<!-- YXd0ZVRpbWVzdGFtcGluZ0NBLmNybDATBgNVHSUEDDAKBggrBgEFBQcDCDAOBgNV -->
<!-- HQ8BAf8EBAMCAQYwKAYDVR0RBCEwH6QdMBsxGTAXBgNVBAMTEFRpbWVTdGFtcC0y -->
<!-- MDQ4LTEwDQYJKoZIhvcNAQEFBQADgYEAAwmbj3nvf1kwqu9otfrjCR27T4IGXTdf -->
<!-- plKfFo3qHJIJRG71betYfDDo+WmNI3MLEm9Hqa45EfgqsZuwGsOO61mWAK3ODE2y -->
<!-- 0DGmCFwqevzieh1XTKhlGOl5QGIllm7HxzdqgyEIjkHq3dlXPx13SYcqFgZepjhq -->
<!-- IhKjURmDfrYwggSjMIIDi6ADAgECAhAOz/Q4yP6/NW4E2GqYGxpQMA0GCSqGSIb3 -->
<!-- DQEBBQUAMF4xCzAJBgNVBAYTAlVTMR0wGwYDVQQKExRTeW1hbnRlYyBDb3Jwb3Jh -->
<!-- dGlvbjEwMC4GA1UEAxMnU3ltYW50ZWMgVGltZSBTdGFtcGluZyBTZXJ2aWNlcyBD -->
<!-- QSAtIEcyMB4XDTEyMTAxODAwMDAwMFoXDTIwMTIyOTIzNTk1OVowYjELMAkGA1UE -->
<!-- BhMCVVMxHTAbBgNVBAoTFFN5bWFudGVjIENvcnBvcmF0aW9uMTQwMgYDVQQDEytT -->
<!-- eW1hbnRlYyBUaW1lIFN0YW1waW5nIFNlcnZpY2VzIFNpZ25lciAtIEc0MIIBIjAN -->
<!-- BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAomMLOUS4uyOnREm7Dv+h8GEKU5Ow -->
<!-- mNutLA9KxW7/hjxTVQ8VzgQ/K/2plpbZvmF5C1vJTIZ25eBDSyKV7sIrQ8Gf2Gi0 -->
<!-- jkBP7oU4uRHFI/JkWPAVMm9OV6GuiKQC1yoezUvh3WPVF4kyW7BemVqonShQDhfu -->
<!-- ltthO0VRHc8SVguSR/yrrvZmPUescHLnkudfzRC5xINklBm9JYDh6NIipdC6Anqh -->
<!-- d5NbZcPuF3S8QYYq3AhMjJKMkS2ed0QfaNaodHfbDlsyi1aLM73ZY8hJnTrFxeoz -->
<!-- C9Lxoxv0i77Zs1eLO94Ep3oisiSuLsdwxb5OgyYI+wu9qU+ZCOEQKHKqzQIDAQAB -->
<!-- o4IBVzCCAVMwDAYDVR0TAQH/BAIwADAWBgNVHSUBAf8EDDAKBggrBgEFBQcDCDAO -->
<!-- BgNVHQ8BAf8EBAMCB4AwcwYIKwYBBQUHAQEEZzBlMCoGCCsGAQUFBzABhh5odHRw -->
<!-- Oi8vdHMtb2NzcC53cy5zeW1hbnRlYy5jb20wNwYIKwYBBQUHMAKGK2h0dHA6Ly90 -->
<!-- cy1haWEud3Muc3ltYW50ZWMuY29tL3Rzcy1jYS1nMi5jZXIwPAYDVR0fBDUwMzAx -->
<!-- oC+gLYYraHR0cDovL3RzLWNybC53cy5zeW1hbnRlYy5jb20vdHNzLWNhLWcyLmNy -->
<!-- bDAoBgNVHREEITAfpB0wGzEZMBcGA1UEAxMQVGltZVN0YW1wLTIwNDgtMjAdBgNV -->
<!-- HQ4EFgQURsZpow5KFB7VTNpSYxc/Xja8DeYwHwYDVR0jBBgwFoAUX5r1blzMzHSa -->
<!-- 1N197z/b7EyALt0wDQYJKoZIhvcNAQEFBQADggEBAHg7tJEqAEzwj2IwN3ijhCcH -->
<!-- bxiy3iXcoNSUA6qGTiWfmkADHN3O43nLIWgG2rYytG2/9CwmYzPkSWRtDebDZw73 -->
<!-- BaQ1bHyJFsbpst+y6d0gxnEPzZV03LZc3r03H0N45ni1zSgEIKOq8UvEiCmRDoDR -->
<!-- EfzdXHZuT14ORUZBbg2w6jiasTraCXEQ/Bx5tIB7rGn0/Zy2DBYr8X9bCT2bW+IW -->
<!-- yhOBbQAuOA2oKY8s4bL0WqkBrxWcLC9JG9siu8P+eJRRw4axgohd8D20UaF5Mysu -->
<!-- e7ncIAkTcetqGVvP6KUwVyyJST+5z3/Jvz4iaGNTmr1pdKzFHTx/kuDDvBzYBHUw -->
<!-- ggUwMIIEGKADAgECAhAECRgbX9W7ZnVTQ7VvlVAIMA0GCSqGSIb3DQEBCwUAMGUx -->
<!-- CzAJBgNVBAYTAlVTMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3 -->
<!-- dy5kaWdpY2VydC5jb20xJDAiBgNVBAMTG0RpZ2lDZXJ0IEFzc3VyZWQgSUQgUm9v -->
<!-- dCBDQTAeFw0xMzEwMjIxMjAwMDBaFw0yODEwMjIxMjAwMDBaMHIxCzAJBgNVBAYT -->
<!-- AlVTMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2Vy -->
<!-- dC5jb20xMTAvBgNVBAMTKERpZ2lDZXJ0IFNIQTIgQXNzdXJlZCBJRCBDb2RlIFNp -->
<!-- Z25pbmcgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQD407Mcfw4R -->
<!-- r2d3B9MLMUkZz9D7RZmxOttE9X/lqJ3bMtdx6nadBS63j/qSQ8Cl+YnUNxnXtqrw -->
<!-- nIal2CWsDnkoOn7p0WfTxvspJ8fTeyOU5JEjlpB3gvmhhCNmElQzUHSxKCa7JGnC -->
<!-- wlLyFGeKiUXULaGj6YgsIJWuHEqHCN8M9eJNYBi+qsSyrnAxZjNxPqxwoqvOf+l8 -->
<!-- y5Kh5TsxHM/q8grkV7tKtel05iv+bMt+dDk2DZDv5LVOpKnqagqrhPOsZ061xPeM -->
<!-- 0SAlI+sIZD5SlsHyDxL0xY4PwaLoLFH3c7y9hbFig3NBggfkOItqcyDQD2RzPJ6f -->
<!-- pjOp/RnfJZPRAgMBAAGjggHNMIIByTASBgNVHRMBAf8ECDAGAQH/AgEAMA4GA1Ud -->
<!-- DwEB/wQEAwIBhjATBgNVHSUEDDAKBggrBgEFBQcDAzB5BggrBgEFBQcBAQRtMGsw -->
<!-- JAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3NwLmRpZ2ljZXJ0LmNvbTBDBggrBgEFBQcw -->
<!-- AoY3aHR0cDovL2NhY2VydHMuZGlnaWNlcnQuY29tL0RpZ2lDZXJ0QXNzdXJlZElE -->
<!-- Um9vdENBLmNydDCBgQYDVR0fBHoweDA6oDigNoY0aHR0cDovL2NybDQuZGlnaWNl -->
<!-- cnQuY29tL0RpZ2lDZXJ0QXNzdXJlZElEUm9vdENBLmNybDA6oDigNoY0aHR0cDov -->
<!-- L2NybDMuZGlnaWNlcnQuY29tL0RpZ2lDZXJ0QXNzdXJlZElEUm9vdENBLmNybDBP -->
<!-- BgNVHSAESDBGMDgGCmCGSAGG/WwAAgQwKjAoBggrBgEFBQcCARYcaHR0cHM6Ly93 -->
<!-- d3cuZGlnaWNlcnQuY29tL0NQUzAKBghghkgBhv1sAzAdBgNVHQ4EFgQUWsS5eyoK -->
<!-- o6XqcQPAYPkt9mV1DlgwHwYDVR0jBBgwFoAUReuir/SSy4IxLVGLp6chnfNtyA8w -->
<!-- DQYJKoZIhvcNAQELBQADggEBAD7sDVoks/Mi0RXILHwlKXaoHV0cLToaxO8wYdd+ -->
<!-- C2D9wz0PxK+L/e8q3yBVN7Dh9tGSdQ9RtG6ljlriXiSBThCk7j9xjmMOE0ut119E -->
<!-- efM2FAaK95xGTlz/kLEbBw6RFfu6r7VRwo0kriTGxycqoSkoGjpxKAI8LpGjwCUR -->
<!-- 4pwUR6F6aGivm6dcIFzZcbEMj7uo+MUSaJ/PQMtARKUT8OZkDCUIQjKyNookAv4v -->
<!-- cn4c10lFluhZHen6dGRrsutmQ9qzsIzV6Q3d9gEgzpkxYz0IGhizgZtPxpMQBvwH -->
<!-- gfqL2vmCSfdibqFT+hKUGIUukpHqaGxEMrJmoecYpJpkUe8wggUwMIIEGKADAgEC -->
<!-- AhALDZkX0sdOvwJhwzQTbV+7MA0GCSqGSIb3DQEBCwUAMHIxCzAJBgNVBAYTAlVT -->
<!-- MRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5j -->
<!-- b20xMTAvBgNVBAMTKERpZ2lDZXJ0IFNIQTIgQXNzdXJlZCBJRCBDb2RlIFNpZ25p -->
<!-- bmcgQ0EwHhcNMTgwNzEyMDAwMDAwWhcNMTkwNzE2MTIwMDAwWjBtMQswCQYDVQQG -->
<!-- EwJVUzERMA8GA1UECBMITmV3IFlvcmsxFzAVBgNVBAcTDldlc3QgSGVucmlldHRh -->
<!-- MRgwFgYDVQQKEw9Kb2VsIEguIEJlbm5ldHQxGDAWBgNVBAMTD0pvZWwgSC4gQmVu -->
<!-- bmV0dDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMJb3Cf3n+/pFJiO -->
<!-- hQqN5m54FpyIktMRWe5VyF8465BnAtzw3ivMyN+3k8IoXQhMxpCsY1TJbLyydNR2 -->
<!-- QzwEEtGfcTVnlAJdFFlBsgIdK43waaML5EG7tzNJKhHQDiN9bVhLPTXrit80eCTI -->
<!-- RpOA7435oVG8erDpxhJUK364myUrmSyF9SbUX7uE09CJJgtB7vqetl4G+1j+iFDN -->
<!-- Xi3bu1BFMWJp+TtICM+Zc5Wb+ZaYAE6V8t5GCyH1nlAI3cPjqVm8y5NoynZTfOhV -->
<!-- bHiV0QI2K5WrBBboR0q6nd4cy6NJ8u5axi6CdUhnDMH20NN2I0v+2MBkgLAzxPrX -->
<!-- kjnaEGECAwEAAaOCAcUwggHBMB8GA1UdIwQYMBaAFFrEuXsqCqOl6nEDwGD5LfZl -->
<!-- dQ5YMB0GA1UdDgQWBBTiwur/NVanABEKwjZDB3g6SZN1mTAOBgNVHQ8BAf8EBAMC -->
<!-- B4AwEwYDVR0lBAwwCgYIKwYBBQUHAwMwdwYDVR0fBHAwbjA1oDOgMYYvaHR0cDov -->
<!-- L2NybDMuZGlnaWNlcnQuY29tL3NoYTItYXNzdXJlZC1jcy1nMS5jcmwwNaAzoDGG -->
<!-- L2h0dHA6Ly9jcmw0LmRpZ2ljZXJ0LmNvbS9zaGEyLWFzc3VyZWQtY3MtZzEuY3Js -->
<!-- MEwGA1UdIARFMEMwNwYJYIZIAYb9bAMBMCowKAYIKwYBBQUHAgEWHGh0dHBzOi8v -->
<!-- d3d3LmRpZ2ljZXJ0LmNvbS9DUFMwCAYGZ4EMAQQBMIGEBggrBgEFBQcBAQR4MHYw -->
<!-- JAYIKwYBBQUHMAGGGGh0dHA6Ly9vY3NwLmRpZ2ljZXJ0LmNvbTBOBggrBgEFBQcw -->
<!-- AoZCaHR0cDovL2NhY2VydHMuZGlnaWNlcnQuY29tL0RpZ2lDZXJ0U0hBMkFzc3Vy -->
<!-- ZWRJRENvZGVTaWduaW5nQ0EuY3J0MAwGA1UdEwEB/wQCMAAwDQYJKoZIhvcNAQEL -->
<!-- BQADggEBADNNHuRAdX0ddONqaUf3H3pwa1K016C02P90xDIyMvw+hiUb4Z/xewnY -->
<!-- jyplspD0NQB9ca2pnNIy1KwjJryRgq8gl3epSiWTbViVn6VDK2h0JXm54H6hczQ8 -->
<!-- sEshCW53znNVUUUfxGsVM9kMcwITHYftciW0J+SsGcfuuAIuF1g47KQXKWOMcUQl -->
<!-- yrP5t0ywotTVcg/1HWAPFE0V0sFy+Or4n81+BWXOLaCXIeeryLYncAVUBT1DI6lk -->
<!-- peRUj/99kkn+hz1q4hHTtfNpMTOApP64EEFGKICKkJdvhs1PjtGa+QdAkhcInTxk -->
<!-- t/hIJPUb1nO4CsKp1gaVsRkkbcStJ2kxggQ3MIIEMwIBATCBhjByMQswCQYDVQQG -->
<!-- EwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNl -->
<!-- cnQuY29tMTEwLwYDVQQDEyhEaWdpQ2VydCBTSEEyIEFzc3VyZWQgSUQgQ29kZSBT -->
<!-- aWduaW5nIENBAhALDZkX0sdOvwJhwzQTbV+7MAkGBSsOAwIaBQCgeDAYBgorBgEE -->
<!-- AYI3AgEMMQowCKACgAChAoAAMBkGCSqGSIb3DQEJAzEMBgorBgEEAYI3AgEEMBwG -->
<!-- CisGAQQBgjcCAQsxDjAMBgorBgEEAYI3AgEVMCMGCSqGSIb3DQEJBDEWBBQ4mLqv -->
<!-- Iq1yHPnelOQ3HP2NhlbXGTANBgkqhkiG9w0BAQEFAASCAQCOhgohg2wHTN6GB8bI -->
<!-- OnPjhlK6b94hel45TB/fypqAXgyGqpEEmMkRe0FQBdgoPcjWEVUAj9HXyFHkisbq -->
<!-- 52cP9eski06Pud8Z69fkMb6PXUbcgxw5Wg8rPEHkOawvmIFjwhbTlHRq2Rwfs9h/ -->
<!-- o3gaOjg8UYcqqjTzK+u2IRl2bJcmiOIKicdL1Hq2bzsx7Pezu+aKF/3Dj48/ilg+ -->
<!-- CRmfW+6EVA6VyQ9i8JSvmURFG/6s0igj1wW3gwppnTUMkybwbH/aG9R83Jfh5EKe -->
<!-- JvgXtrWlGGGuDy2UA07RK9JXdpskG7Favb9AHyKR/dX13cumGuaRaCNbX7C5aSw7 -->
<!-- Jre0oYICCzCCAgcGCSqGSIb3DQEJBjGCAfgwggH0AgEBMHIwXjELMAkGA1UEBhMC -->
<!-- VVMxHTAbBgNVBAoTFFN5bWFudGVjIENvcnBvcmF0aW9uMTAwLgYDVQQDEydTeW1h -->
<!-- bnRlYyBUaW1lIFN0YW1waW5nIFNlcnZpY2VzIENBIC0gRzICEA7P9DjI/r81bgTY -->
<!-- apgbGlAwCQYFKw4DAhoFAKBdMBgGCSqGSIb3DQEJAzELBgkqhkiG9w0BBwEwHAYJ -->
<!-- KoZIhvcNAQkFMQ8XDTE5MDMzMDAzMzA1NFowIwYJKoZIhvcNAQkEMRYEFKGbSeRa -->
<!-- UfL15Mh2mk0vg2QnZCwQMA0GCSqGSIb3DQEBAQUABIIBAFUylXyRKZ7ZD7hvoTiu -->
<!-- rUXyRNDp4KJTy4IGPhOYaXdaRnVEEcJ8UcqjjAIgsaYwzX2CEg6U8TsKyHMiJj87 -->
<!-- oPRThUf+fqQYl+8y6BNxtwBwgXq6fG6g74lyE/4/ctvKRHR8oCHZKqodjaL0bmyi -->
<!-- gDhRg6vsd1GwUtaoz/IHOfj0y7YHrIF8/kPH1zaWU55tshVMS9I/ny7wa3apdXiu -->
<!-- g4NiNN9TBfEwag69j4MaMSkxsWIDhnhdSMIF5wJb6gfyUF144liyfUH3GRIvWUjf -->
<!-- OuKOB4/YsOjIDW+1KOcxKISZjMecjtZ8AxjkG/5i4Pmc1gicCEIM1RJC8ZP3Vt28 -->
<!-- pOU= -->
<!-- SIG # End signature block -->
